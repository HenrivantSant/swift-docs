(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{142:function(e,t,r){"use strict";r.d(t,"a",(function(){return p})),r.d(t,"b",(function(){return f}));var n=r(0),a=r.n(n);function c(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){c(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=a.a.createContext({}),u=function(e){var t=a.a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=u(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,c=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=u(r),b=n,f=p["".concat(i,".").concat(b)]||p[b]||d[b]||c;return r?a.a.createElement(f,o(o({ref:t},s),{},{components:r})):a.a.createElement(f,o({ref:t},s))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=r.length,i=new Array(c);i[0]=b;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var s=2;s<c;s++)i[s]=r[s];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"},87:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return o})),r.d(t,"toc",(function(){return l})),r.d(t,"default",(function(){return u}));var n=r(3),a=r(7),c=(r(0),r(142)),i={title:"Driver"},o={unversionedId:"database/driver",id:"database/driver",isDocsHomePage:!1,title:"Driver",description:"To interact with the database directly for executing raw SQL queries, you can inject the Swift\\Dbal\\Dbal service. This is a direct implementation of the Cycle\\Database\\DatabaseInterface.",source:"@site/docs/database/driver.md",slug:"/database/driver",permalink:"/swift-docs/docs/database/driver",editUrl:"https://github.com/SwiftAPI/swift-docs/tree/main/docs/database/driver.md",version:"current",sidebar:"docs",previous:{title:"Lifecycles",permalink:"/swift-docs/docs/database/lifecycles"},next:{title:"Dependency Injection",permalink:"/swift-docs/docs/dependency-injection"}},l=[],s={toc:l};function u(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},s,r,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"To interact with the database directly for executing raw SQL queries, you can inject the ",Object(c.b)("inlineCode",{parentName:"p"},"Swift\\Dbal\\Dbal")," service. This is a direct implementation of the ",Object(c.b)("inlineCode",{parentName:"p"},"Cycle\\Database\\DatabaseInterface"),"."),Object(c.b)("p",null,"You can select data from the database by using the ",Object(c.b)("inlineCode",{parentName:"p"},"query()")," method."),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-php"},"$result = $dbal->query( 'SELECT * FROM movies WHERE id = ?', [ 1 ] );\nprint_r( $result->fetchAll() );\n")),Object(c.b)("p",null,"You can also use named parameters."),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-php"},"$result = $dbal->query( 'SELECT * FROM movies WHERE id = :id', [ 'id' => 1 ] );\nprint_r( $result->fetchAll() );\n")),Object(c.b)("p",null,"To execute and non-select queries, you can use the ",Object(c.b)("inlineCode",{parentName:"p"},"execute()")," method."),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-php"},"$affected = $dbal->execute( 'DELETE FROM movies WHERE id = :id', [ 'id' => 1 ] );\nprint_r( $affected );\n")))}u.isMDXComponent=!0}}]);