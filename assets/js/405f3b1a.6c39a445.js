(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{118:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var r=n(0),s=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=s.a.createContext({}),u=function(e){var t=s.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return s.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return s.a.createElement(s.a.Fragment,{},t)}},d=s.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=u(n),d=r,m=p["".concat(o,".").concat(d)]||p[d]||b[d]||a;return n?s.a.createElement(m,i(i({ref:t},l),{},{components:n})):s.a.createElement(m,i({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var l=2;l<a;l++)o[l]=n[l];return s.a.createElement.apply(null,o)}return s.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},90:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return u}));var r=n(3),s=n(7),a=(n(0),n(118)),o={title:"Users (& Clients)"},i={unversionedId:"security/users",id:"security/users",isDocsHomePage:!1,title:"Users (& Clients)",description:"Users and clients are treated the same for a large part. But there actually is major difference (see below).",source:"@site/docs/security/users.md",slug:"/security/users",permalink:"/swift-docs/docs/security/users",editUrl:"https://github.com/HenrivantSant/swift-docs/tree/master/docs/security/users.md",version:"current",sidebar:"docs",previous:{title:"Authorization",permalink:"/swift-docs/docs/security/authorization"},next:{title:"Firewall",permalink:"/swift-docs/docs/security/firewall"}},c=[{value:"Endpoints",id:"endpoints",children:[{value:"For users",id:"for-users",children:[]},{value:"For clients",id:"for-clients",children:[]}]},{value:"Forgot- and reset password",id:"forgot--and-reset-password",children:[{value:"Forgot password",id:"forgot-password",children:[]},{value:"Reset password",id:"reset-password",children:[]}]}],l={toc:c};function u(e){var t=e.components,n=Object(s.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Users and clients are treated the same for a large part. But there actually is major difference (see below)."),Object(a.b)("p",null,"After authentication both will be represented as implementations of ",Object(a.b)("inlineCode",{parentName:"p"},"Swift\\Security\\User\\UserInterface")," for easy usage throughout the application."),Object(a.b)("h4",{id:"users"},"Users"),Object(a.b)("p",null,"Users are end users of the application (e.g. customers, etc.)"),Object(a.b)("h4",{id:"clients-swiftsecurityuserclientuser"},"Clients (",Object(a.b)("inlineCode",{parentName:"h4"},"Swift\\Security\\User\\ClientUser"),")"),Object(a.b)("p",null,"Clients represent API Consumers."),Object(a.b)("h2",{id:"endpoints"},"Endpoints"),Object(a.b)("p",null,"Swift comes with a ready to use users endpoint for the following actions:"),Object(a.b)("h3",{id:"for-users"},"For users"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Create user account (REST & GraphQl)"),Object(a.b)("li",{parentName:"ul"},"Login (REST & GraphQl)"),Object(a.b)("li",{parentName:"ul"},"Me (REST & GraphQl) ",Object(a.b)("em",{parentName:"li"},"returns currently authenticated user")),Object(a.b)("li",{parentName:"ul"},"List Users (REST & GraphQl)"),Object(a.b)("li",{parentName:"ul"},"User by id (REST & GraphQl)"),Object(a.b)("li",{parentName:"ul"},"Forgot password (REST & GraphQl) ",Object(a.b)("em",{parentName:"li"},"generates a 30 minutes valid reset token")),Object(a.b)("li",{parentName:"ul"},"Reset password (REST & GraphQl) ",Object(a.b)("em",{parentName:"li"},"create new user password"))),Object(a.b)("h3",{id:"for-clients"},"For clients"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Get (Oauth) token (REST & GraphQl)"),Object(a.b)("li",{parentName:"ul"},"Refresh (Oauth) token (REST & GraphQl)")),Object(a.b)("h2",{id:"forgot--and-reset-password"},"Forgot- and reset password"),Object(a.b)("p",null,"When a user has forgotten it's password a special token is required to reset it. This available with REST and GraphQl (see example below)."),Object(a.b)("h3",{id:"forgot-password"},"Forgot password"),Object(a.b)("p",null,"Forgt password endpoinsts"),Object(a.b)("h4",{id:"example-rest"},"Example: REST"),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Request (/users/password/forgot/) POST")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-json"},'{\n    "email": "user@foo.com"\n}\n')),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Response")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-json"},'{\n    "message": "Successfully requested reset password token. The user has been notified.",\n    "code": 200\n}\n')),Object(a.b)("h4",{id:"example-graphql"},"Example: GraphQl"),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Request (/users/password/forgot/) POST")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-graphql"},"mutation($email: String!) {\n    ForgotPassword(email: $email) {\n        message\n        code\n    }\n}\n")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Response")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "ForgotPassword": {\n      "message": "Successfully requested reset password token. The user has been notified.",\n      "code": 200\n    }\n  }\n}\n')),Object(a.b)("h3",{id:"reset-password"},"Reset password"),Object(a.b)("p",null,"As you can see in the example above the resetPasswordToken is not return directly for security reasons. The system does also not do this automatically since it's highly likely you'd want to moderate this message to the user anyway. So you'll need to listen to the Event and notify the user of the token."),Object(a.b)("h4",{id:"example-notify-user-of-token"},"Example: Notify user of token"),Object(a.b)("p",null,"See below how this could be achieved. You'd obviously want to do this different, but it gives you an idea."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-php"},"declare(strict_types=1);\n\nnamespace Foo\\Listener;\n\nuse Swift\\Events\\Attribute\\ListenTo;\nuse Swift\\Security\\Authentication\\Events\\AuthenticationTokenCreatedEvent;\nuse Swift\\Security\\Authentication\\Token\\ResetPasswordToken;\n\n/**\n * Class OnAfterAuthentication\n * @package Foo\\Listener\n */\nclass OnAfterAuthentication {\n\n    /**\n     * Assign user roles after token has been created for user\n     *\n     * @param AuthenticationTokenCreatedEvent $event\n     */\n    #[ListenTo(event: AuthenticationTokenCreatedEvent::class)]\n    public function assignUserRoles( AuthenticationTokenCreatedEvent $event ): void {\n        if ($event->getToken() instanceof ResetPasswordToken) {\n            mail(\n                to: $event->getToken()->getUser()->getEmail(),\n                subject: 'Password reset',\n                message: sprintf('Hi %s, Hereby your password reset token: %s.', $event->getToken()->getUser()->getFullName(), $event->getToken()->getTokenString())\n            );\n        }\n    }\n\n}\n")),Object(a.b)("h4",{id:"example-rest-1"},"Example: Rest"),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Request (/users/password/reset/) POST")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-json"},'{\n    "resetPasswordToken": "d1c926ba541338e76971c1ded10d147bbd8f1747",\n    "newPassword": "henri"\n}\n')),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Response")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-json"},'{\n    "message": "Successfully reset password",\n    "code": 200\n}\n')),Object(a.b)("h4",{id:"example-graphql-1"},"Example: GraphQl"),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Request")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-graphql"},"mutation($resetPasswordToken: String!, $newPassword: String!) {\n  ResetPassword(resetPasswordInput: {\n    resetPasswordToken: $resetPasswordToken,\n    newPassword: $newPassword\n  }) {\n    message\n    code\n  }\n}\n")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-json"},'{\n    "data": {\n        "ResetPassword": {\n            "message": "Successfully reset password.",\n            "code": 200\n        }\n    }\n}\n')))}u.isMDXComponent=!0}}]);